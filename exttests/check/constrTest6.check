package <empty> {
  class Test[T1, T2](x: T1, z: T2)(f: String) extends AnyRef() { 
    this: Test[Test$$T1, Test$$T2] =>
   
    type Test$$T1
    private[this] type T1 = Test$$T1
    type Test$$T2
    private[this] type T2 = Test$$T2
    private[this] val x: Test$$T1
    private[this] val z: Test$$T2
    private[this] val f: String
    def <init>[T1, T2](x: T1)(z: T2): Unit = {
      this[Nothing, Nothing](x, z)("gg")
      ()
    }
    def <init>[T1, T2](): Unit = {
      this[Nothing, Nothing](5.asInstanceOf[T1])(42.0.asInstanceOf[T2])
      ()
    }
  }
}